axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 35)) +
coord_flip() + # flips x and y axes
labs(title = "",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
enter_fly(x_loc = 1, y_loc = 30, align = "right", alpha = 0) +
exit_fly(x_loc = 1, y_loc = 30, align = "right", alpha = 0) +
labs(title = "Women: {closest_state}", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
help(enter_fly)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 35)) +
coord_flip() + # flips x and y axes
labs(title = "",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
enter_fly(x_loc = 1, y_loc = 30) +
exit_fly(x_loc = 1, y_loc = 30) +
labs(title = "Women: {closest_state}", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 35)) +
coord_flip() + # flips x and y axes
labs(title = "",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
enter_fly(x_loc = 700, y_loc = 20) +
exit_fly(x_loc = 700, y_loc = 20) +
labs(title = "Women: {closest_state}", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 35)) +
coord_flip() + # flips x and y axes
labs(title = "",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
labs(title = "Women: {closest_state}", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 35)) +
coord_flip() + # flips x and y axes
labs(title = "",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
labs(title = "Women: {closest_state}", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
df <- data.frame(Housework = numeric(),
t_interval = as.POSIXct(character()),
group = character())
for(gr in groups){
n <- which(groups == gr)
men <- data_gss_main[data_gss_main$AGEGR10 == n & data_gss_main$SEX == 1, ]
episode <- data_gss_episode[data_gss_episode$PUMFID %in% men$PUMFID, ]
men <- merge(episode, men, by = "PUMFID", all.x = TRUE)
tem_men <- gss_longtempo(men)
df_men <- as.data.frame(tem_men$values)
names(df_men) <- tem_men$key
df_men <- df_men / n_distinct(men$PUMFID) * 100
## add positions and time labels
df_men$time <- 1:1440
df_men$t_intervals_labels <- t_intervals_labels
df_men <- subset(df_men, select = c(Housework,t_intervals_labels))
df_men$group <- gr
df <- rbind(df, df_men)
}
df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = paletteer_d("rcartocolor::Pastel",1)) +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"))  +
coord_flip() +
scale_y_reverse(limits = c(30, 0)) + #puts y reverse
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 1, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none")+
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
labs(title = "{closest_state}: Men", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/second.gif"
anim_save(f, animation = a)
df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = paletteer_d("rcartocolor::Pastel",1)) +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"))  +
coord_flip() +
scale_y_reverse(limits = c(35, 0)) + #puts y reverse
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 1, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none")+
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
labs(title = "{closest_state}: Men", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/second.gif"
anim_save(f, animation = a)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = paletteer_d("rcartocolor::Pastel",1)) +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"))  +
coord_flip() +
scale_y_reverse(limits = c(35, 0)) + #puts y reverse
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 1, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none")+
# Here comes the gganimate code
transition_states(
group
) +
ease_aes('linear')+
labs(title = "{closest_state}: Men", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/second.gif"
anim_save(f, animation = a)
assign("Men_mgif", image_read(a))
a
b <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/second.gif"
anim_save(f, animation = b)
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = paletteer_d("rcartocolor::Pastel",1)) +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"))  +
coord_flip() +
scale_y_reverse(limits = c(35, 0)) + #puts y reverse
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 1, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none")+
# Here comes the gganimate code
transition_states(
group
) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out')+
labs(title = "{closest_state}: Men", x = "Time of Day", y = "Percent")
b <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/second.gif"
anim_save(f, animation = b)
df <- data.frame(Housework = numeric(),
t_interval = as.POSIXct(character()),
group = character())
for(gr in groups){
n <- which(groups == gr)
women <- data_gss_main[data_gss_main$AGEGR10 == n & data_gss_main$SEX == 2, ]
episode <- data_gss_episode[data_gss_episode$PUMFID %in% women$PUMFID, ]
women <- merge(episode, women, by = "PUMFID", all.x = TRUE)
tem_women <- gss_longtempo(women)
df_women <- as.data.frame(tem_women$values)
names(df_women) <- tem_women$key
df_women <- df_women / n_distinct(women$PUMFID) * 100
## add positions and time labels
df_women$time <- 1:1440
df_women$t_intervals_labels <- t_intervals_labels
df_women <- subset(df_women, select = c(Housework,t_intervals_labels))
df_women$group <- gr
df <- rbind(df, df_women)
}
df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 30)) +
coord_flip() + # flips x and y axes
labs(title = "Retired Women: Housework Time",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
facet_wrap(~ group, nrow = 2, scales = "free_y")
p <- df %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`, group = group)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 35)) +
coord_flip() + # flips x and y axes
labs(title = "",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
# Here comes the gganimate code
transition_states(
group
) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out')+
labs(title = "Women: {closest_state}", x = "Time of Day", y = "Percent")
a <- animate(p, width = 240, height = 480,
duration = 10)
f = "output/first.gif"
anim_save(f, animation = a)
a
new_gif <- image_append(c(a[1], b[1]))
for(i in 2:100){
combined <- image_append(c(a[i], b[i]))
new_gif <- c(new_gif, combined)
}
new_gif
new_gif <- image_append(c(b[1], a[1]))
for(i in 2:100){
combined <- image_append(c(b[i], a[i]))
new_gif <- c(new_gif, combined)
}
new_gif
anim_save("combined.gif", animation = new_gif)
anim_save("output/combined.gif", animation = new_gif)
df_women %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 30)) +
coord_flip() + # flips x and y axes
labs(title = "Retired Women: Housework Time",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
geom_image(aes(image = new_gif))
utils::install.packages("ggimage")
utils::install.packages("ggimage")
library(ggimage)
df_women %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 30)) +
coord_flip() + # flips x and y axes
labs(title = "Retired Women: Housework Time",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
geom_image(aes(image = new_gif))
help("geom_image")
df_women %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 30)) +
coord_flip() + # flips x and y axes
labs(title = "Retired Women: Housework Time",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
geom_image(aes(image= new_gif))
bitmap <- image_data(new_gif)
df_women %>%
ggplot(aes(x = t_intervals_labels, y = `Housework`)) +
geom_area(fill = "#FF6666") +
scale_x_datetime(labels = scales::date_format("%H:%M", tz="EST"), position = "top")  +
scale_y_continuous(limits = c(0, 30)) +
coord_flip() + # flips x and y axes
labs(title = "Retired Women: Housework Time",
x = "Time of Day",
y = "Percent") +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey20", linetype = "dashed"),
panel.grid.minor = element_line(color = "grey10", linetype = "dotted"),
plot.title = element_text(hjust = 0.5, face="bold", size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.caption = element_text(hjust = 0, size = 14),
legend.position = "none") +
geom_image(aes(image= bitmap))
table(data_gss_main$PRV)
mean(data_gss_main$HSWKDUR)
data_gss_main %>%
group_by(SEX, AGEGR10) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE))
data_gss_main %>%
group_by(SEX, AGEGR10, PRV) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE))
data_gss_main %>%
group_by(SEX, AGEGR10, PRV) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE)) %>%
filter(!is.na(mean_HSW)) %>%
group_by(AGEGR10, PRV) %>%
summarise(diff_mean_HSW = diff(mean_HSW))
hsw <- data_gss_main %>%
group_by(SEX, AGEGR10, PRV) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE))
View(hsw)
hsw <- data_gss_main %>%
group_by(SEX, AGEGR10, PRV) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE)) %>%
filter(!is.na(mean_HSW)) %>%
group_by(AGEGR10, PRV) %>%
summarise(diff_mean_HSW = diff(mean_HSW))
View(hsw)
hsw <- data_gss_main %>%
group_by(SEX, PRV) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE)) %>%
filter(!is.na(mean_HSW)) %>%
group_by(PRV) %>%
summarise(diff_mean_HSW = diff(mean_HSW))
table(data_gss$AGEGR10)
table(data_gss_main$AGEGR10)
hsw <- data_gss_main %>%
filter(AGEGR10 >= 5) %>%
group_by(SEX, PRV) %>%
summarise(mean_HSW = mean(HSWKDUR, na.rm = TRUE)) %>%
filter(!is.na(mean_HSW)) %>%
group_by(PRV) %>%
summarise(diff_mean_HSW = diff(mean_HSW))
install.packages("sf")
install.packages("rgdal")
install.packages("geojsonio")
install.packages("spdplyr")
install.packages("rmapshaper")
utils::install.packages("sf")
save.image("~/R scripts/DragonsDen/.RData")
